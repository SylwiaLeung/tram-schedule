// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tram_Schedule.DAL;

namespace Tram_Schedule.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Tram_Schedule.Models.Route", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("TramRoutes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Papieski"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Wawelski"
                        });
                });

            modelBuilder.Entity("Tram_Schedule.Models.Tram", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FirstRun")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Trams");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstRun = new DateTime(1988, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PapaTram"
                        },
                        new
                        {
                            ID = 2,
                            FirstRun = new DateTime(2018, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "VintageTram"
                        });
                });

            modelBuilder.Entity("Tram_Schedule.Models.TramStop", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RouteID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("RouteID");

                    b.ToTable("TramStops");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "This stop is the best of them all",
                            Name = "Sanktuarium",
                            RouteID = 1
                        },
                        new
                        {
                            ID = 2,
                            Description = "This stop is very far",
                            Name = "Borek",
                            RouteID = 1
                        },
                        new
                        {
                            ID = 3,
                            Description = "This stop lies near a very good cafe",
                            Name = "Stradom",
                            RouteID = 2
                        },
                        new
                        {
                            ID = 4,
                            Description = "This stop is situated by the Wawel castle",
                            Name = "Wawel",
                            RouteID = 2
                        });
                });

            modelBuilder.Entity("Tram_Schedule.Models.TramStop", b =>
                {
                    b.HasOne("Tram_Schedule.Models.Route", "Route")
                        .WithMany("StopsList")
                        .HasForeignKey("RouteID");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("Tram_Schedule.Models.Route", b =>
                {
                    b.Navigation("StopsList");
                });
#pragma warning restore 612, 618
        }
    }
}
